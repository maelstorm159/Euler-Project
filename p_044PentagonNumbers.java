package EulerProjectFinished;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

//Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. 
//The first ten pentagonal numbers are:
//1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
//It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, 
//their difference, 70 − 22 = 48, is not pentagonal.
//Find the pair of pentagonal numbers, Pj and Pk, for which their sum and 
//difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

public class p_044PentagonNumbers {

	public static Long pentagonal(long n){
		
		long temp = (n*(3*n-1)) / 2;
		
		return temp;

	}
	
	public static void main(String[] args) {
		List<Long> data = new ArrayList<>();
		
		for (int i =1;i<5000;i++){
			data.add(pentagonal(i));
		}

		for(int i = 0 ; i < data.size(); i ++){
			  for(int j = i+1 ; j < data.size(); j ++){
			    
				  long sum = data.get(i)+data.get(j);
				  if (sum > data.get(data.size()-1)){
					  break;
				  }
				  long diff = Math.abs(data.get(i)-data.get(j));
				  
				  if (data.contains(diff)){
					  if (data.contains(sum)){
						  System.out.printf("%d\t%d\t%d\t%d",data.get(i),data.get(j),sum,diff);
					  }
				  }
				  
			  }
		}
	}
}
